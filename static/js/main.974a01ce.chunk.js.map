{"version":3,"sources":["n1-main/m1-ui/r8-Header/Header.module.css","n1-main/m1-ui/r7-common/Button/MyButton.module.css","n1-main/Main.module.css","n1-main/m1-ui/r1-Registration/RefistrationPage.module.css","n1-main/m1-ui/r2-Login/LoginPage.module.css","n1-main/m1-ui/r3-Profile/ProfilePage.module.css","n1-main/m1-ui/r4-PasswordRecovery/PasswordRecoveryPage.module.css","n1-main/m1-ui/r5- NewPassword/NewPasswordPage.module.css","n1-main/m1-ui/r6-Page404/Page404.module.css","n1-main/m1-ui/r1-Registration/RefistrationPage.tsx","n1-main/m1-ui/r2-Login/LoginPage.tsx","n1-main/m1-ui/r3-Profile/ProfilePage.tsx","n1-main/m1-ui/r4-PasswordRecovery/PasswordRecoveryPage.tsx","n1-main/m1-ui/r7-common/Button/MyButton.tsx","n1-main/m1-ui/r5- NewPassword/NewPasswordPage.tsx","n1-main/m1-ui/r6-Page404/Page404.tsx","n1-main/m1-ui/r8-Header/Header.tsx","n1-main/Main.tsx","App.tsx","serviceWorker.ts","n1-main/m2-bll/Redux/Reducers/profile-reducer.ts","n1-main/m2-bll/Redux/Reducers/registration-reducer.ts","n1-main/m2-bll/Redux/Reducers/passwordRecovery-reducer.ts","n1-main/m2-bll/Redux/Reducers/newPassword-reducer.ts","n1-main/m2-bll/Redux/Reducers/login-reducer.ts","n1-main/m2-bll/Redux/Reducers/page404-reducer.ts","n1-main/m2-bll/Redux/Store.ts","index.tsx"],"names":["module","exports","RegistrationPage","className","styles","registrationBlock","LoginPage","loginBlock","ProfilePage","profileBlock","PasswordRecoveryPage","passwordRecoveryBlock","MyButton","React","memo","props","onClick","styleRed","buttonRed","button","title","NewPasswordPage","newPasswordBlock","Page404","page404Block","Header","headerBlock","linksBlock","to","item","activeClassName","active","Main","pagesBlock","path","component","App","Boolean","window","location","hostname","match","initialState","reducers","combineReducers","registration","state","action","type","login","profile","passwordRecovery","newPassword","page404","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.974a01ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBlock\":\"Header_headerBlock__1BdxU\",\"active\":\"Header_active__3Vc7R\",\"item\":\"Header_item__9D1ZR\",\"linksBlock\":\"Header_linksBlock__3IPgj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyButton_button__2MLHI\",\"buttonRed\":\"MyButton_buttonRed__3_uXr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesBlock\":\"Main_pagesBlock__1TmHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationBlock\":\"RefistrationPage_registrationBlock__1tBmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"LoginPage_loginBlock__1W0Qh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"ProfilePage_profileBlock__1yrGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecoveryBlock\":\"PasswordRecoveryPage_passwordRecoveryBlock__lyyfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPasswordBlock\":\"NewPasswordPage_newPasswordBlock__dXWvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page404Block\":\"Page404_page404Block__p4kQO\"};","import React from \"react\"\r\nimport styles from \"./RefistrationPage.module.css\"\r\n\r\nexport const RegistrationPage = () => {\r\n    return (\r\n        <div className={styles.registrationBlock}>\r\n            <h2>Registration</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport styles from \"./LoginPage.module.css\"\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <div className={styles.loginBlock}>\r\n            <h2>Login</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport styles from \"./ProfilePage.module.css\"\r\n\r\nexport const ProfilePage = () => {\r\n    return (\r\n        <div className={styles.profileBlock}>\r\n            <h2>Profile</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./PasswordRecoveryPage.module.css\"\r\n\r\nexport const PasswordRecoveryPage = () => {\r\n    return (\r\n        <div className={styles.passwordRecoveryBlock}>\r\n            <h2>PasswordRecovery</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./MyButton.module.css\"\r\n\r\ntype typeMyButton = {\r\n    title: string\r\n    onClick: () => void\r\n    styleRed: boolean\r\n}\r\n\r\n\r\n\r\nexport const MyButton:React.FC<typeMyButton> = React.memo((props) => {\r\n    return (\r\n        <button onClick={props.onClick} className={props.styleRed? styles.buttonRed : styles.button}>{props.title}</button>\r\n    )\r\n})\r\n","import React from \"react\"\r\nimport styles from \"./NewPasswordPage.module.css\"\r\nimport {MyButton} from \"../r7-common/Button/MyButton\";\r\n\r\nexport const NewPasswordPage = () => {\r\n    return (\r\n        <div className={styles.newPasswordBlock}>\r\n            <h2>NewPassword</h2>\r\n            <div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n                <div>\r\n                    <MyButton title={\"button\"} onClick={() => {\r\n                    }} styleRed={false}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./Page404.module.css\"\r\n\r\nexport const Page404 = () => {\r\n    return (\r\n        <div className={styles.page404Block}>\r\n            <h2>404 error</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={styles.headerBlock}>\r\n            <div className={styles.linksBlock}>\r\n                <NavLink to=\"/Registration\" className={styles.item} activeClassName={styles.active}>Registration</NavLink>\r\n                <NavLink to=\"/Login\" className={styles.item} activeClassName={styles.active}>Login</NavLink>\r\n                <NavLink to=\"/Profile\" className={styles.item} activeClassName={styles.active}>Profile</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from \"./Main.module.css\"\r\nimport {RegistrationPage} from \"./m1-ui/r1-Registration/RefistrationPage\";\r\nimport {LoginPage} from \"./m1-ui/r2-Login/LoginPage\";\r\nimport {ProfilePage} from \"./m1-ui/r3-Profile/ProfilePage\";\r\nimport {PasswordRecoveryPage} from \"./m1-ui/r4-PasswordRecovery/PasswordRecoveryPage\";\r\nimport {NewPasswordPage} from \"./m1-ui/r5- NewPassword/NewPasswordPage\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport {Page404} from \"./m1-ui/r6-Page404/Page404\";\r\nimport {Header} from \"./m1-ui/r8-Header/Header\";\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Header/>\r\n            <div className={styles.pagesBlock}>\r\n                <Route path=\"/Registration\" component={RegistrationPage}/>\r\n                <Route path=\"/Profile\" component={ProfilePage}/>\r\n                <Route path=\"/Login\" component={LoginPage}/>\r\n                <Route path=\"/PasswordRecovery\" component={PasswordRecoveryPage}/>\r\n                <Route path=\"/NewPassword\" component={NewPasswordPage}/>\r\n                <Route path=\"/404\" component={Page404}/>\r\n            </div>\r\n        </HashRouter>\r\n    )\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport {Main} from \"./n1-main/Main\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Main/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst initialState = {}\r\n\r\ntype initialStateType = {}\r\n\r\ntype ActionsTypes = {type: string}\r\n\r\nexport const profileReducer = (state:initialStateType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\ntype initialStateType = {}\r\n\r\ntype ActionsTypes = {type: string}\r\n\r\nexport const registrationReducer = (state:initialStateType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\ntype initialStateType = {}\r\n\r\ntype ActionsTypes = {type: string}\r\n\r\nexport const passwordRecoveryReducer = (state:initialStateType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\ntype initialStateType = {}\r\n\r\ntype ActionsTypes = {type: string}\r\n\r\nexport const newPasswordReducer = (state:initialStateType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\ntype initialStateType = {}\r\n\r\ntype ActionsTypes = {type: string}\r\n\r\nexport const loginReducer = (state:initialStateType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nconst initialState = {}\r\n\r\ntype initialStateType = {}\r\n\r\ntype ActionsTypes = {type: string}\r\n\r\nexport const page404Reducer = (state:initialStateType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {profileReducer} from \"./Reducers/profile-reducer\";\r\nimport {registrationReducer} from \"./Reducers/registration-reducer\";\r\nimport {passwordRecoveryReducer} from \"./Reducers/passwordRecovery-reducer\";\r\nimport {newPasswordReducer} from \"./Reducers/newPassword-reducer\";\r\nimport {loginReducer} from \"./Reducers/login-reducer\";\r\nimport {page404Reducer} from \"./Reducers/page404-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    registration: registrationReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    newPassword: newPasswordReducer,\r\n    page404: page404Reducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof reducers>\r\n\r\nexport const store = createStore(reducers)\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./n1-main/m2-bll/Redux/Store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}